<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.dao.ClazzDAO">
  <resultMap id="BaseResultMap" type="com.xue.bean.Clazz">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="Goodis" jdbcType="VARCHAR" property="goodis" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, cname, Goodis
  </sql>
  <select id="selectByExample" parameterType="com.xue.bean.ClazzExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clazz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xue.bean.ClazzExample">
    delete from clazz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xue.bean.Clazz">
    insert into clazz (cid, cname, Goodis
      )
    values (#{cid,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{goodis,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xue.bean.Clazz">
    insert into clazz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="goodis != null">
        Goodis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="goodis != null">
        #{goodis,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xue.bean.ClazzExample" resultType="java.lang.Long">
    select count(*) from clazz
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clazz
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodis != null">
        Goodis = #{record.goodis,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clazz
    set cid = #{record.cid,jdbcType=INTEGER},
      cname = #{record.cname,jdbcType=VARCHAR},
      Goodis = #{record.goodis,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xue.bean.Clazz">
    update clazz
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="goodis != null">
        Goodis = #{goodis,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xue.bean.Clazz">
    update clazz
    set cname = #{cname,jdbcType=VARCHAR},
      Goodis = #{goodis,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>

  <resultMap id="selectClazzBySchoolIdRM" type="com.xue.bean.Clazz" extends="BaseResultMap">
    <collection property="studentList" ofType="com.xue.bean.Student">
      <id column="sid" jdbcType="INTEGER" property="sid" />
      <result column="sName" jdbcType="VARCHAR" property="sname" />
      <result column="scid" jdbcType="INTEGER" property="scid" />
      <result column="sHobby" jdbcType="VARCHAR" property="shobby" />
      <result column="cid" jdbcType="INTEGER" property="cid" />

      <collection property="schoolList" ofType="com.xue.bean.School">
        <id column="scid" jdbcType="INTEGER" property="scid" />
        <result column="scName" jdbcType="VARCHAR" property="scname" />
        <result column="scAdress" jdbcType="VARCHAR" property="scadress" />
      </collection>
    </collection>

  </resultMap>

  <!--作业1：  写出 学校&#45;&#45;学生&#45;&#45;班级 的  1 对多  对多的 查询-->
  <select id="selectClazzBySchoolId" resultMap="selectClazzBySchoolIdRM" parameterType="int">
    select * from student s join clazz c on s.cid=c.cid join school s2 on s.scid=s2.scid
    where c.cid=#{cid}
  </select>

  <!--//作业2： 写出 学校&#45;&#45;学生&#45;&#45;班级 的   多条查询。-->
  <select id="slectClazzByStudentBySchool" resultType="map" parameterType="map">
    select *  from student s join clazz c on s.cid=c.cid
    join school s2 on s.scid=s2.scid
    <where>
      <if test="scName != null and scName != '' ">
          s2.scName=#{scName}
      </if>
      <if test="scid != null and scid != '' ">
      s2.scid=#{scid}
    </if>
      <if test="scAdress != null and scAdress != '' ">
        s2.scAdress=#{scAdress}
      </if>
      <if test="cname != null and cname != '' ">
        c.cname=#{cname}
      </if>
      <if test="cid != null and cid != '' ">
        c.cid=#{cid}
      </if>
    </where>
  </select>
</mapper>